{"version":3,"sources":["../src/test/ipfilter.spec.js"],"names":[],"mappings":"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","file":"ipfilter.spec.js","sourcesContent":["/* global describe, it, beforeEach */\n\n'use strict';\n\nvar ipfilter = require('../index'),\n  assert = require('assert');\n\ndescribe('enforcing IP address blacklist restrictions', function(){\n\n  beforeEach(function(){\n    this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, allowForward: true });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should allow all non-blacklisted ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.2';\n    this.ipfilter( this.req, {}, () => {\n      done();\n    });\n  });\n\n  it('should allow all non-blacklisted IPv6 ips', function(done){\n    this.req.connection.remoteAddress = '::1';\n    this.ipfilter( this.req, {}, () => {\n      done();\n    });\n  });\n\n  it('should allow all non-blacklisted forwarded ips', function( done ){\n    this.req.headers['x-forwarded-for'] = '127.0.0.2';\n    this.ipfilter( this.req, {}, () => {\n      done();\n    });\n  });\n\n  it('should deny all blacklisted ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.1';\n    var res = {\n      end: () => {\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, () => {});\n  });\n\n  it('should deny all blacklisted forwarded ips', function(done){\n    this.req.headers['x-forwarded-for'] = '127.0.0.1';\n    var res = {\n      end: () => {\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, () => {});\n  });\n});\n\ndescribe('enforcing IP address whitelist restrictions', () => {\n\n  beforeEach(function() {\n    this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, mode: 'allow', allowForward: true });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should allow whitelisted ips', function(done){\n    this.req.connection.remoteAddress = '127.0.0.1';\n    this.ipfilter( this.req, {}, function(){\n      done();\n    });\n  });\n\n  it('should allow whitelisted forwarded ips', function(done){\n    this.req.headers['x-forwarded-for'] = '127.0.0.1';\n    this.ipfilter( this.req, {}, function(){\n      done();\n    });\n  });\n\n  it('should allow whitelisted port ips',function(done){\n    this.req.connection.remoteAddress = '127.0.0.1:84849';\n    this.ipfilter( this.req, {}, function(){\n      done();\n    });\n  });\n\n  it('should deny all non-whitelisted ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.2';\n    var res = {\n      end: function(){\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, function(){});\n  });\n\n  it('should deny all non-whitelisted forwarded ips', function( done ){\n    this.req.headers['x-forwarded-for'] = '127.0.0.2';\n    var res = {\n      end: function(){\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, function(){});\n  });\n});\n\ndescribe('using cidr block',function(){\n  describe('enforcing whitelist restrictions',function(){\n    beforeEach(function(){\n      // Ip range: 127.0.0.1 - 127.0.0.14\n      this.ipfilter = ipfilter([ '127.0.0.1/28' ], { log: false, mode: 'allow', allowForward: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow whitelisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all non-whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.17';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny all non-whitelisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.17';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('enforcing IP address blacklist restrictions', function(){\n\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ '127.0.0.1/28' ], { log: false, allowForward: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all non-blacklisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.17';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow all non-blacklisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.17';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all blacklisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny all blacklisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('enforcing private ip restrictions',function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ '127.0.0.1/28' ], { log: false, allowPrivateIPs: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all private ips', function( done ){\n      this.req.connection.remoteAddress = '10.0.0.0';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n  });\n\n});\n\ndescribe('using ranges',function(){\n  describe('enforcing whitelist restrictions',function(){\n    beforeEach(function(){\n      // Ip range: 127.0.0.1 - 127.0.0.14\n      this.ipfilter = ipfilter([ ['127.0.0.1','127.0.0.3'] ], { log: false, mode: 'allow', allowForward: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow whitelisted ips with port numbers', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1:93923';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow whitelisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all non-whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.17';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny all non-whitelisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.17';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('enforcing ip restrictions with only one ip in the range',function(){\n    beforeEach(function(){\n      // Ip range: 127.0.0.1 - 127.0.0.14\n      this.ipfilter = ipfilter([ ['127.0.0.1'] ], { log: false, mode: 'allow' });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all non-whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.17';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('enforcing IP address blacklist restrictions', function(){\n\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ ['127.0.0.1','127.0.0.3'] ], { log: false, allowForward: true  });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all non-blacklisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.17';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow all non-blacklisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.17';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all blacklisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny all blacklisted forwarded ips', function( done ){\n      this.req.headers['x-forwarded-for'] = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('enforcing private ip restrictions',function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ ['127.0.0.1','127.0.0.3'] ], { log: false, allowPrivateIPs: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all private ips', function( done ){\n      this.req.connection.remoteAddress = '10.0.0.0';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n  });\n});\n\ndescribe('disabling forward headers', function(){\n\n  beforeEach(function(){\n    this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, allowForward: false });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should deny all non-blacklisted forwarded ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.1';\n    this.req.headers['x-forwarded-for'] = '127.0.0.2';\n    var res = {\n      end: () => {\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, () => {});\n  });\n});\n\n\ndescribe('enabling cloudflare headers', function(){\n\n  beforeEach(function(){\n    this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, allowCloudflare: true });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should allow all non-blacklisted forwarded ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.1';\n    this.req.headers['cf-connecting-ip'] = '127.0.0.2';\n    this.ipfilter( this.req, {}, function(){\n      done();\n    });\n  });\n});\n\ndescribe('disabling cloudflare headers', function(){\n\n  beforeEach(function(){\n    this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, allowCloudflare: false });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should deny all non-blacklisted forwarded ips', function( done ){\n    this.req.connection.remoteAddress = '127.0.0.1';\n    this.req.headers['cf-connecting-ip'] = '127.0.0.2';\n    var res = {\n      end: () => {\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, () => {});\n  });\n});\n\ndescribe('excluding certain routes from filtering',function(){\n  beforeEach(function(){\n    this.ipfilter = ipfilter(['127.0.0.1'], { log: false, mode: 'allow', excluding: ['/foo.*'] });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      },\n      url: '/foo?bar=123'\n    };\n  });\n\n  it('should allow requests to excluded paths', function( done ){\n    this.req.connection.remoteAddress = '190.0.0.0';\n    this.ipfilter( this.req, {}, function(){\n      done();\n    });\n  });\n\n  it('should deny requests to other paths', function(done){\n    this.req.url = '/bar';\n    this.req.connection.remoteAddress = '190.0.0.0';\n    var res = {\n      end: function(){\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, function(){});\n  });\n});\n\ndescribe('no ip address can be found',function(){\n  beforeEach(function(){\n    this.ipfilter = ipfilter(['127.0.0.1'], { log: false, mode: 'allow', excluding: ['/foo.*'] });\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n  });\n\n  it('should deny requests', function(done){\n    this.req.url = '/bar';\n    this.req.connection.remoteAddress = '';\n    var res = {\n      end: function(){\n        assert.equal( 401, res.statusCode );\n        done();\n      }\n    };\n\n    this.ipfilter( this.req, res, function(){});\n  });\n});\n\ndescribe('external logger function', function () {\n\n  it('should log to a passed logger exactly one message', function (done) {\n    var messages = [];\n    var logF = function logFF(message) {\n      messages.push(message);\n    };\n    this.ipfilter = ipfilter(['127.0.0.1'], {log: true, logF: logF});\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n\n    this.req.connection.remoteAddress = '127.0.0.1';\n    var res = {\n      end: function () {\n        assert.equal(1, messages.length);\n        done();\n      }\n    };\n\n    this.ipfilter(this.req, res, function () {\n    });\n  });\n\n  it('should log to a passed logger the correct message', function (done) {\n    var messages = [];\n    var logF = function logFF(message) {\n      messages.push(message);\n    };\n    this.ipfilter = ipfilter(['127.0.0.1'], {log: true, logF: logF});\n    this.req = {\n      session: {},\n      headers: [],\n      connection: {\n        remoteAddress: ''\n      }\n    };\n\n\n    this.req.connection.remoteAddress = '127.0.0.1';\n    var res = {\n      end: function () {\n        assert.equal('Access denied to IP address: 127.0.0.1', messages[0]);\n        done();\n      }\n    };\n\n    this.ipfilter(this.req, res, function () {\n    });\n  });\n\n});\n\ndescribe('an array of cidr blocks',function(){\n  describe('blacklist',function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter(['72.30.0.0/26', '127.0.0.1/24'], { mode: 'deny', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should deny all blacklisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('whitelist',function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter(['72.30.0.0/26', '127.0.0.1/24'], { mode: 'allow', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all whitelisted ips', function( done ){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n  });\n});\n\ndescribe('mixing different types of filters',function(){\n  describe('with a whitelist', function () {\n    beforeEach(function(){\n      this.ipfilter = ipfilter(['127.0.0.1', '192.168.1.3/28', ['127.0.0.3', '127.0.0.35']], { cidr: true, mode: 'allow', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow explicit ips',function(done){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '192.168.1.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow ips in a range',function(done){\n      this.req.connection.remoteAddress = '127.0.0.20';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n  });\n\n  describe('with a blacklist', function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter(['127.0.0.1', '192.168.1.3/28', ['127.0.0.3', '127.0.0.35']], { mode: 'deny', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should deny explicit ips',function(done){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '192.168.1.15';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny ips in a range',function(done){\n      this.req.connection.remoteAddress = '127.0.0.15';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n});\n\n//codio Tests\ndescribe('enforcing codio based client IP address', function(){\n  describe('blacklist restrictions', () => {\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, allowCodio: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all non-blacklisted forwarded ips', function( done ){\n      this.req.headers['x-real-ip'] = '127.0.0.2';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should deny all blacklisted forwarded ips', function( done ){\n      this.req.headers['x-real-ip'] = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('whitelist restrictions', () => {\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, mode: 'allow', allowCodio: true });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow whitelisted forwarded ips', function( done ){\n      this.req.headers['x-real-ip'] = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n    it('should deny all non-whitelisted forwarded ips', function( done ){\n      this.req.headers['x-real-ip'] = '127.0.0.2';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n\n  describe('while disabled', () => {\n    beforeEach(function(){\n      this.ipfilter = ipfilter([ '127.0.0.1' ], { log: false, mode: 'allow', allowCodio: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow all whitelisted forwarded ips', function( done ){\n      this.req.headers['x-real-ip'] = '127.0.0.2';\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n  });\n});\n\ndescribe('mixing different types of filters with IPv4 and IPv6',function(){\n\n  var ips = ['127.0.0.1', '192.168.1.3/28', '2001:4860:8006::62','2001:4860:8007::62/64',['127.0.0.3', '127.0.0.35']];\n\n  describe('with a whitelist', function () {\n\n    beforeEach(function(){\n      this.ipfilter = ipfilter(ips, { cidr: true, mode: 'allow', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should allow explicit IPv4 ips',function(done){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow IPv4 ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '192.168.1.1';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow IPv4 ips in a range',function(done){\n      this.req.connection.remoteAddress = '127.0.0.20';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow explicit IPv6 ips',function(done){\n      this.req.connection.remoteAddress = '2001:4860:8006::62';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n    it('should allow IPv6 ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '2001:4860:8007:0::62';\n      this.ipfilter( this.req, {}, function(){\n        done();\n      });\n    });\n\n  });\n\n  describe('with a blacklist', function(){\n    beforeEach(function(){\n      this.ipfilter = ipfilter(ips, { mode: 'deny', log: false });\n      this.req = {\n        session: {},\n        headers: [],\n        connection: {\n          remoteAddress: ''\n        }\n      };\n    });\n\n    it('should deny explicit ips',function(done){\n      this.req.connection.remoteAddress = '127.0.0.1';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '192.168.1.15';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny explicit IPv6 ips',function(done){\n      this.req.connection.remoteAddress = '2001:4860:8006::62';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny IPv6 ips in a cidr block',function(done){\n      this.req.connection.remoteAddress = '2001:4860:8007:0::62';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n\n    it('should deny ips in a range',function(done){\n      this.req.connection.remoteAddress = '127.0.0.15';\n      var res = {\n        end: function(){\n          assert.equal( 401, res.statusCode );\n          done();\n        }\n      };\n\n      this.ipfilter( this.req, res, function(){});\n    });\n  });\n});\n"]}